{"version":3,"file":"static/js/95.25d62c58.chunk.js","mappings":"kOAaaA,GATeC,EAAAA,GAAAA,IAAH,4KASFA,EAAAA,GAAAA,IAAH,8XAYPC,EAAeD,EAAAA,GAAAA,GAAH,gJ,sHCvBZE,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,WAAWC,QAArB,EAEtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,WAAWG,SAArB,EAEvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,WAAWK,KAArB,EAEnBC,EAAe,SAAAP,GAAK,OAAIA,EAAMQ,OAAOC,IAAjB,E,2DCLpBC,GAAWb,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAH,uZAcRe,EAAQf,EAAAA,GAAAA,MAAH,oXAaLgB,GAAahB,EAAAA,EAAAA,IAAOiB,EAAAA,GAAPjB,CAAH,kqBAqBVkB,GAAYlB,EAAAA,EAAAA,IAAOmB,EAAAA,GAAPnB,CAAH,mMAOToB,EAASpB,EAAAA,GAAAA,OAAH,uf,4BCnCfqB,EAASC,EAAAA,KAAaC,MAAM,CAC9BC,KAAMF,EAAAA,KAEHG,QAVH,yHAEA,0IASGC,SAAS,oBACZC,OAAQL,EAAAA,KAELG,QAXgB,+CAEnB,gGAUGC,SAAS,gCAGRE,EAAgB,CAAEJ,KAAM,GAAIG,OAAQ,IAE7BE,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACX1B,GAAW2B,EAAAA,EAAAA,IAAY9B,GAQ7B,OACE,SAAC,KAAD,CACE0B,cAAeA,EACfK,SATiB,SAACC,EAAD,IACnBC,EAD8C,EAAhBA,aAE1B9B,EAAS+B,MAAK,SAAAC,GAAO,OAAIA,EAAQb,OAASU,EAAOV,IAA5B,IACvBc,IAAAA,OAAAA,QAAwB,sCACnBR,GAASS,EAAAA,EAAAA,IAAWL,GAC5B,EAKGM,iBAAkBnB,EAHpB,UAKE,UAACR,EAAD,YACE,UAACE,EAAD,mBAEE,SAACC,EAAD,CAAYyB,KAAK,OAAOjB,KAAK,aAE/B,SAACN,EAAD,CAAWM,KAAK,OAAOkB,UAAU,OACjC,UAAC3B,EAAD,qBAEE,SAACC,EAAD,CAAYyB,KAAK,MAAMjB,KAAK,eAE9B,SAACN,EAAD,CAAWM,KAAK,SAASkB,UAAU,OACnC,SAACtB,EAAD,CAAQqB,KAAK,SAAb,6BAIP,E,UCjEYzB,EAAahB,EAAAA,GAAAA,MAAH,knBAwBVe,EAAQf,EAAAA,GAAAA,MAAH,8SCtBL2C,EAAS,WACpB,IAAMb,GAAWC,EAAAA,EAAAA,MAMjB,OAAS,UAAC,EAAD,oCAED,SAAC,EAAD,CAAYU,KAAK,OAAOjB,KAAK,SAASoB,SAP5B,SAAAC,GAChB,IAAMC,EAAYD,EAAEE,OAAOC,MAC3BlB,GAASmB,EAAAA,EAAAA,GAAeH,GACzB,MAMF,ECbYI,EAAelD,EAAAA,GAAAA,IAAH,sWAcZD,EAAUC,EAAAA,GAAAA,EAAH,kKAUPmD,EAASnD,EAAAA,GAAAA,EAAH,2IASNoB,EAASpB,EAAAA,GAAAA,OAAH,0YC9BNoD,EAAc,WACzB,IAAMC,GAAcrB,EAAAA,EAAAA,IAAY9B,GAC1BoD,GAAgBtB,EAAAA,EAAAA,IAAYtB,GAC5BoB,GAAWC,EAAAA,EAAAA,MAIjB,OAHuBsB,EAAY1C,QAAO,SAAA0B,GAAO,OAC/CA,EAAQb,KAAK+B,cAAcC,SAASF,EAAcC,cADH,IAG3BE,KAAI,SAAApB,GAAO,OAC/B,UAACa,EAAD,YACE,UAACnD,EAAD,eAAWsC,EAAQb,KAAnB,UACA,iCACE,SAAC,EAAD,UAASa,EAAQV,UACjB,SAAC,EAAD,CACEc,KAAK,SACLiB,QAAS,kBAAM5B,GAAS6B,EAAAA,EAAAA,IAActB,EAAQuB,IAArC,EAFX,yBAJevB,EAAQuB,GADI,GAclC,ECxBYC,EAAiB7D,EAAAA,GAAAA,EAAH,sNAWd8D,EAAgB9D,EAAAA,GAAAA,GAAH,+GCHX,SAAS+D,IACpB,IAAMjC,GAAWC,EAAAA,EAAAA,MACXxB,GAAYyB,EAAAA,EAAAA,IAAY1B,GACxBG,GAAQuB,EAAAA,EAAAA,IAAYxB,GAK1B,OAHAwD,EAAAA,EAAAA,YAAU,WACVlC,GAASmC,EAAAA,EAAAA,MACR,GAAE,CAACnC,KAEA,4BACI,SAAC+B,EAAD,mEACA,SAAChC,EAAD,KACA,SAACiC,EAAD,wBACA,UAAC,KAAD,YACI,SAACnB,EAAD,IACCpC,IAAcE,IAAS,mDACxB,SAAC2C,EAAD,SAGf,C","sources":["components/General.styled.jsx","redux/contacts/selectors.js","components/contactForm/ContactForm.styled.jsx","components/contactForm/ContactForm.jsx","components/filter/Filter.styled.jsx","components/filter/Filter.jsx","components/contactList/ContactList.styled.jsx","components/contactList/ContactList.jsx","pages/Phonebook/Phonebook.styled.jsx","pages/Phonebook/Phonebook.jsx"],"sourcesContent":["\nimport styled from 'styled-components';\n\n\nexport const PhonebokCont = styled.div`\n  padding: 40px;\n  padding-top: 0;\n  margin: 20px;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  color: #010101;\n`\nexport const Contact = styled.div`\n   display: flex;\n    margin-left:auto;\n    margin-right: auto;\n    margin-bottom: 20px;\n    flex-direction: column;\n    padding:20px;\n    width: 500px;\n    background-color: #F6F4F2;\n    border-radius: 4px;\n    box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n`\nexport const SectionTitle = styled.h2`\n    margin-top: 10px;\n    margin-bottom: 10px;\n    margin-left: auto;\n    margin-right: auto;\n    width: 500px;\n    `\n","// створюємо селектори для використання в потрібних частинах проекту через useSelector\n\nexport const selectContacts = state => state.phonebooks.contacts;\n\nexport const selectIsLoading = state => state.phonebooks.isLoading;\n\nexport const selectError = state => state.phonebooks.error;\n\nexport const selectFilter = state => state.filter.data;\n","import { Form, Field , ErrorMessage} from 'formik';\nimport styled from \"styled-components\";\n\nexport const MainForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    padding-top: 10px;\n    padding-left: 20px;\n    padding-right: 20px;\n    padding-bottom: 10px;\n    width: 500px;\n    margin-left:auto;\n    margin-right: auto;\n    border-radius: 4px;\n    box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n`\n\nexport const Lable = styled.label`\n    display: flex;\n    align-items: center;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    justify-content: space-between;\n    color: #1651B8;\n    font-weight: bold;\n    font-size: 20px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  \n  `\n\nexport const InputField = styled(Field)`\n    padding: 10px;\n    margin-left: 10px;\n    border-radius: 10px;\n    border: 1px solid black;\n    outline: none;\n    width: 340px;\n     background-color: #F6F4F2;\n    box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-weight: bold;\n    font-size: medium;\n    color: #1651B8 ;\n    transition: all 300ms ease;\n    \n  :hover,\n  :focus {\n    border-color: gray;\n    transition: all 300ms ease;\n  }\n`\nexport const ErrorMess = styled(ErrorMessage)`\n    margin: 5px;\n    color: #F45707;\n    font-style: italic;\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    text-align: left;\n`\nexport const Button = styled.button`\n    padding: 10px;\n    margin-top: 5px;\n    margin-bottom: 5px;\n    margin-left: auto;\n    margin-right: auto;\n    cursor: pointer;\n    font-weight: bold;\n \n    width: 100px;\n    border: 1px solid gray;\n    border-radius: 10px;\nbox-shadow: rgba(17, 17, 26, 0.1) 0px 4px 16px, rgba(17, 17, 26, 0.1) 0px 8px 24px, rgba(17, 17, 26, 0.1) 0px 16px 56px;   &:hover,\n   :focus{\n     background-color: #F45707;\n     color:#FAFAF8;\n      transition: all 300ms ease;\n   }\n`\n\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operation';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  MainForm,\n  Lable,\n  InputField,\n  ErrorMess,\n  Button,\n} from './ContactForm.styled';\nimport Notiflix from 'notiflix';\n\nconst patternName =\n  /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nconst massageName =\n  \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\";\nconst patternPhone = /^[+]*[(]{0,1}[0-9]{1,3}[)]{0,1}[-\\s./0-9]*$/g;\nconst massagePhone =\n  'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +';\n\nlet schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(patternName, massageName)\n    .required('Name is required'),\n  number: yup\n    .string()\n    .matches(patternPhone, massagePhone)\n    .required('A phone number is required'),\n});\n\nconst initialValues = { name: '', number: '' };\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = (values, { resetForm }) => {\n    resetForm();\n    if (contacts.some(contact => contact.name === values.name)) {\n      Notiflix.Notify.failure('Contact is already in contact list');\n    } else dispatch(addContact(values));\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <MainForm>\n        <Lable>\n          Name\n          <InputField type=\"text\" name=\"name\" />\n        </Lable>\n        <ErrorMess name=\"name\" component=\"p\" />\n        <Lable>\n          Number\n          <InputField type=\"tel\" name=\"number\" />\n        </Lable>\n        <ErrorMess name=\"number\" component=\"p\" />\n        <Button type=\"submit\">Add contact</Button>\n      </MainForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const InputField = styled.input`\n  padding: 5px;\n  margin-left: 10px;\n  border-radius: 10px;\n  border: 1px solid black;\n  outline: none;\n  width: 200px;\n  box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px,\n    rgba(6, 24, 44, 0.65) 0px 4px 6px -1px,\n    rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\n    Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  font-weight: bold;\n  font-size: medium;\n  color: #1651b8;\n  transition: all 300ms ease;\n\n  :hover,\n  :focus {\n    border-color: gray;\n    transition: all 300ms ease;\n  }\n`;\n\nexport const Lable = styled.label`\n\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\n    Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  text-align: start;\n  color: #525355;\n  font-style: oblique 90deg;\n  font-weight: bold;\n  font-size: 18px;\n  margin: 10px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { filterContscts } from 'redux/contacts/filterSlice';\nimport {InputField, Lable} from './Filter.styled'\n\nexport const Filter = () => {\n  const dispatch = useDispatch()\n  const inputData = e => {\n    const typedData = e.target.value\n    dispatch(filterContscts(typedData))\n  };\n  \n  return ( <Lable>\n          Find contacts by name\n          <InputField type=\"text\" name=\"filter\" onChange={inputData}/>\n        </Lable>);\n}\n","import styled from 'styled-components';\n\nexport const ContactField = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: #fafafa;\n  padding: 20px;\n  width: 460px;\n  margin-top: 10px;\n  border-radius: 4px;\n  box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px,\n    rgba(6, 24, 44, 0.65) 0px 4px 6px -1px,\n    rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n`;\n\nexport const Contact = styled.p`\n  display: flex;\n  margin: 0;\n  align-items: center;\n  color: #030c24;\n  font-weight: 700;\n  font-size: large;\n  min-width: 200px;\n`;\n\nexport const Number = styled.p`\n  display: flex;\n  font-weight: 700;\n  font-size: medium;\n  margin: 0;\n  color: #1651b8;\n  min-width: 200px;\n`;\n\nexport const Button = styled.button`\n  padding: 5px;\n  cursor: pointer;\n  font-weight: bold;\n  width: 60px;\n  border: 1px solid gray;\n  border-radius: 10px;\n  box-shadow: rgba(17, 17, 26, 0.1) 0px 4px 16px,\n    rgba(17, 17, 26, 0.1) 0px 8px 24px, rgba(17, 17, 26, 0.1) 0px 16px 56px;\n  &:hover,\n  :focus {\n    background-color: #df2914;\n    color: #fafaf8;\n    transition: all 300ms ease;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operation';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { ContactField, Contact, Button, Number } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contactList = useSelector(selectContacts);\n  const contactFilter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const filtredContact = contactList.filter(contact =>\n    contact.name.toLowerCase().includes(contactFilter.toLowerCase())\n  );\n  return filtredContact.map(contact => (\n    <ContactField key={contact.id}>\n      <Contact> {contact.name} : </Contact>\n      <>\n        <Number>{contact.number}</Number>\n        <Button\n          type=\"button\"\n          onClick={() => dispatch(deleteContact(contact.id))}\n        >\n          delete\n        </Button>\n      </>\n    </ContactField>\n  ));\n};\n","import styled from \"styled-components\"\n\nexport const AddContactInfo = styled.p`\n    font-size: medium;\n    font-style: italic;\n    font-weight: 600;\n    margin-bottom: 5px;\n    margin-left: auto;\n    margin-right: auto;\n    width: 500px;\n    color: #1651B8;\n    `\n\nexport const ContactsTitle = styled.h2`\n    margin: 10px;\n    margin-left: auto;\n    margin-right: auto;\n    width: 500px;\n`\n\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operation\";\nimport { selectError, selectIsLoading } from \"redux/contacts/selectors\";\nimport { Contact } from \"../../components/General.styled\";\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\nimport { Filter } from \"../../components/filter/Filter\";\nimport { ContactList } from \"../../components/contactList/ContactList\";\nimport { useEffect } from \"react\";\nimport {AddContactInfo, ContactsTitle } from \"./Phonebook.styled\";\n\nexport default function Phonebook() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError)\n  \n    useEffect(() => {\n    dispatch(fetchContacts())\n    }, [dispatch]);\n    return (\n        <div>\n            <AddContactInfo>Type name & phone number to add to the contact list</AddContactInfo>\n            <ContactForm />\n            <ContactsTitle>Contacts</ContactsTitle>\n            <Contact>\n                <Filter />\n                {isLoading && !error && <b>Request in progress...</b>}\n                <ContactList />\n            </Contact>\n        </div>);\n}"],"names":["Contact","styled","SectionTitle","selectContacts","state","phonebooks","contacts","selectIsLoading","isLoading","selectError","error","selectFilter","filter","data","MainForm","Form","Lable","InputField","Field","ErrorMess","ErrorMessage","Button","schema","yup","shape","name","matches","required","number","initialValues","ContactForm","dispatch","useDispatch","useSelector","onSubmit","values","resetForm","some","contact","Notiflix","addContact","validationSchema","type","component","Filter","onChange","e","typedData","target","value","filterContscts","ContactField","Number","ContactList","contactList","contactFilter","toLowerCase","includes","map","onClick","deleteContact","id","AddContactInfo","ContactsTitle","Phonebook","useEffect","fetchContacts"],"sourceRoot":""}