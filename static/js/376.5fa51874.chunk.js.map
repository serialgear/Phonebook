{"version":3,"file":"static/js/376.5fa51874.chunk.js","mappings":"mOAaaA,GATeC,EAAAA,GAAAA,IAAH,4KASFA,EAAAA,GAAAA,IAAH,8XAYPC,EAAeD,EAAAA,GAAAA,GAAH,gJ,8GCtBZE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,8VAYRI,EAAQJ,EAAAA,GAAAA,MAAH,oXAaLK,GAAaL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,kqBAqBVO,GAAYP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,mMAOTS,EAAST,EAAAA,GAAAA,OAAH,ghB,uCClDbU,EAAgB,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAMnDC,EAASC,EAAAA,KAAaC,MAAM,CAC5BL,KAAMI,EAAAA,KAAaE,QAHH,2EAHA,0IAMqCC,SAAS,oBAC9DN,MAAOG,EAAAA,KAAaH,MANL,4BAMuBM,SAAS,qBAC/CL,SAAUE,EAAAA,KAAaI,IAAI,EANT,4CAM2BD,SAAS,2BAG7CE,EAAe,WACpB,IAAMC,GAAWC,EAAAA,EAAAA,MAKrB,OACQ,SAAC,KAAD,CACAZ,cAAeA,EACfa,SAPa,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC5BJ,GAASK,EAAAA,EAAAA,IAASF,IAClBC,GACH,EAKOE,iBAAkBb,EAHlB,UAII,UAACZ,EAAD,CAAW0B,aAAa,MAAxB,WACI,UAACxB,EAAD,uBAEI,SAACC,EAAD,CAAYwB,KAAK,OAAOlB,KAAK,aAE7B,SAACJ,EAAD,CAAWI,KAAK,OAAOmB,UAAU,OACrC,UAAC1B,EAAD,CAAO2B,QAAQ,GAAf,mBAEI,SAAC1B,EAAD,CAAYwB,KAAK,QAAQlB,KAAK,cAE9B,SAACJ,EAAD,CAAWI,KAAK,QAAQmB,UAAU,OACtC,UAAC1B,EAAD,CAAO2B,QAAQ,GAAf,sBAEI,SAAC1B,EAAD,CAAYwB,KAAK,WAAWlB,KAAK,iBAEjC,SAACJ,EAAD,CAAWI,KAAK,WAAWmB,UAAU,OACzC,SAACrB,EAAD,CAAQoB,KAAK,SAAb,0BAInB,E,oBC5Cc,SAASG,IACtB,IAAMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1B,OACE,4BACE,SAAC,KAAD,4BACA,SAACf,EAAD,IACCa,IAAS,wBAAKA,MAGpB,C","sources":["components/General.styled.jsx","components/registerForm/RegisterForm.styled.jsx","components/registerForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["\nimport styled from 'styled-components';\n\n\nexport const PhonebokCont = styled.div`\n  padding: 40px;\n  padding-top: 0;\n  margin: 20px;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  color: #010101;\n`\nexport const Contact = styled.div`\n   display: flex;\n    margin-left:auto;\n    margin-right: auto;\n    margin-bottom: 20px;\n    flex-direction: column;\n    padding:20px;\n    width: 500px;\n    background-color: #F6F4F2;\n    border-radius: 4px;\n    box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n`\nexport const SectionTitle = styled.h2`\n    margin-top: 10px;\n    margin-bottom: 10px;\n    margin-left: auto;\n    margin-right: auto;\n    width: 500px;\n    `\n","import { Form, Field , ErrorMessage} from 'formik';\nimport styled from \"styled-components\";\n\nexport const MainForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    padding:20px;\n    width: 500px;\n    margin-left:auto;\n    margin-right: auto;\n    margin-bottom: 20px;\n    border-radius: 4px;\n    box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n`\n\nexport const Lable = styled.label`\n    display: flex;\n    align-items: center;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    justify-content: space-between;\n    color: #1651B8;\n    font-weight: bold;\n    font-size: 20px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  \n  `\n\nexport const InputField = styled(Field)`\n    padding: 10px;\n    margin-left: 10px;\n    border-radius: 10px;\n    border: 1px solid black;\n    outline: none;\n    width: 340px;\n     background-color: #F6F4F2;\n    box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-weight: bold;\n    font-size: medium;\n    color: #1651B8 ;\n    transition: all 300ms ease;\n    \n  :hover,\n  :focus {\n    border-color: gray;\n    transition: all 300ms ease;\n  }\n`\nexport const ErrorMess = styled(ErrorMessage)`\n    margin: 5px;\n    color: #F45707;\n    font-style: italic;\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    text-align: left;\n`\nexport const Button = styled.button`\n    padding: 10px;\n    margin-top: 40px;\n    margin-bottom: 30px;\n    margin-left: auto;\n    margin-right: auto;\n    cursor: pointer;\n    font-weight: bold;\n    font-size: large;\n \n    width: 120px;\n    border: 1px solid gray;\n    border-radius: 10px;\nbox-shadow: rgba(17, 17, 26, 0.1) 0px 4px 16px, rgba(17, 17, 26, 0.1) 0px 8px 24px, rgba(17, 17, 26, 0.1) 0px 16px 56px;   &:hover,\n   :focus{\n     background-color: #F45707;\n     color:#FAFAF8;\n      transition: all 300ms ease;\n   }\n`","import { Formik } from \"formik\"\nimport { MainForm, Lable,InputField, ErrorMess, Button  } from \"./RegisterForm.styled\";\nimport * as yup from 'yup';\nimport { useDispatch} from 'react-redux';\nimport { register } from \"redux/auth/operation\";\n\nconst initialValues = { name: '', email: '', password: '' }\nconst massageName = \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\";\nconst EmailAlert = \"Please enter valid email\";\nconst PasswordAlert = \"Password should be at least 6 characters\"\nconst patternName = /^[a-zA-ZÀ-ÖÙ-öù-ÿĀ-žḀ-ỿ0-9\\s\\-.]+$/;\n\nlet schema = yup.object().shape({\n    name: yup.string().matches(patternName, massageName).required('Name is required'),\n    email: yup.string().email(EmailAlert).required('Email is required'),\n    password: yup.string().min(6, PasswordAlert).required('Password is requaired'),\n});\n\nexport const RegisterForm = () => {\n        const dispatch = useDispatch();\n    const handleSubmit = (values, { resetForm }) => {\n        dispatch(register(values))\n        resetForm()\n    }\n    return (\n            <Formik\n            initialValues={initialValues}\n            onSubmit={handleSubmit}\n            validationSchema={schema}>\n                <MainForm  autoComplete=\"off\">\n                    <Lable>\n                        Username\n                        <InputField type=\"text\" name=\"name\"  />\n                        </Lable>\n                        <ErrorMess name=\"name\" component=\"p\" />\n                    <Lable htmlFor=\"\">\n                        Email\n                        <InputField type=\"email\" name=\"email\"  />\n                        </Lable>\n                        <ErrorMess name=\"email\" component=\"p\" />\n                    <Lable htmlFor=\"\">\n                        Password\n                        <InputField type=\"password\" name=\"password\" />\n                        </Lable>\n                        <ErrorMess name=\"password\" component=\"p\" />\n                    <Button type='submit'>Register</Button>\n                </MainForm>\n        </Formik>\n    )\n}","import { RegisterForm } from 'components/registerForm/RegisterForm';\nimport { useSelector } from 'react-redux';\nimport { selectError } from 'redux/auth/selectors';\nimport { SectionTitle } from 'components/General.styled';\n\nexport default function Register() {\n  const error = useSelector(selectError);\n  return (\n    <div>\n      <SectionTitle>Registration</SectionTitle>\n      <RegisterForm />\n      {error && <h3>{error}</h3>}\n    </div>\n  );\n}\n"],"names":["Contact","styled","SectionTitle","MainForm","Form","Lable","InputField","Field","ErrorMess","ErrorMessage","Button","initialValues","name","email","password","schema","yup","shape","matches","required","min","RegisterForm","dispatch","useDispatch","onSubmit","values","resetForm","register","validationSchema","autoComplete","type","component","htmlFor","Register","error","useSelector","selectError"],"sourceRoot":""}